{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.harvest-api.com"
    }
  ],
  "security": [
    {
      "ApiKeyAuthHeader": []
    }
  ],
  "paths": {
    "/linkedin/profile": {
      "get": {
        "summary": "Get the LinkedIn profile of the user",
        "description": "Get the LinkedIn profile of the user. Required at least one of the query parameters",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "URL of the LinkedIn profile (optional)",
            "schema": {
              "type": "string",
              "format": "url"
            }
          },
          {
            "name": "publicIdentifier",
            "in": "query",
            "description": "Public identifier of the LinkedIn profile (optional)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profileId",
            "in": "query",
            "description": "ID of the LinkedIn profile (optional)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short",
            "in": "query",
            "description": "Include this parameter to return a short version of the profile (includes name, title, followers and some other info). This version charges less credits",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Profile"
                    },
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "publicIdentifier": {
                          "type": "string"
                        },
                        "profileId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/linkedin/profile-search": {
      "get": {
        "summary": "Search LinkedIn profiles",
        "description": "Search LinkedIn profiles by name, company, location, and more",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": true,
            "description": "Search profiles by name",
            "schema": {
              "type": "string",
              "format": "url"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "description": "Filter by company ID. One value or multiple comma-separated",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schoolId",
            "in": "query",
            "required": false,
            "description": "Filter by school ID. One value or multiple comma-separated",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Filter by location text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geoId",
            "in": "query",
            "description": "Filter by location as LinkedIn Geo ID. Overrides the location query param. Use the /linkedin/geo-id-search endpoint to find the Geo ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number, use for pagination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile search response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elements": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProfileShort"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "search": {
                          "type": "string"
                        },
                        "companyId": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        },
                        "geoId": {
                          "type": "string"
                        },
                        "page": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/linkedin/company": {
      "get": {
        "summary": "Get the LinkedIn company",
        "description": "Get the LinkedIn company. Required at least one of the query parameters",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "URL of the LinkedIn company (optional)",
            "schema": {
              "type": "string",
              "format": "url"
            }
          },
          {
            "name": "universalName",
            "in": "query",
            "description": "Universal name of the LinkedIn company profile, can be found in URL (optional)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Company name. It will use LinkedIn search and return the most relevant result.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company profile response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Company"
                    },
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "universalName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/linkedin/company-search": {
      "get": {
        "summary": "Search LinkedIn companies",
        "description": "Retrieve a list of LinkedIn companies matching the specified search criteria.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Keywords to search for in company names.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Filter companies by location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geoId",
            "in": "query",
            "description": "Filter by location as LinkedIn Geo ID. Overrides the location query param. Use the /linkedin/geo-id-search endpoint to find the Geo ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companySize",
            "in": "query",
            "description": "Filter by company size. One value or multiple comma-separated. Supported values: '1-10', '11-50', '51-200', '201-500', '501-1000', '1001-5000', '5001-10000', '10001+'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of companies matching the search criteria.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elements": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyShort"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the response."
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message, if any."
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "search": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        },
                        "geoId": {
                          "type": "string"
                        },
                        "companySize": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/linkedin/job": {
      "get": {
        "summary": "Get the LinkedIn job details",
        "description": "Get the LinkedIn job details by job ID or URL.",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "ID of the LinkedIn job (optional)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL of the LinkedIn job (optional)",
            "schema": {
              "type": "string",
              "format": "url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job details response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "element": {
                      "$ref": "#/components/schemas/Job"
                    },
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "jobId": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/linkedin/job-search": {
      "get": {
        "summary": "Search LinkedIn jobs",
        "description": "Search LinkedIn jobs by title, company, location, and more.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search jobs by title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Filter by company ID. One value or multiple comma-separated.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Filter by location text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geoId",
            "in": "query",
            "description": "Filter by location as LinkedIn Geo ID. Overrides the location query param. Use the /linkedin/geo-id-search endpoint to find the Geo ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort by field. Supported values: 'relevance', 'date'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workplaceType",
            "in": "query",
            "description": "Filter by workplace type. One or multiple values comma-separated. Supported values: 'office', 'hybrid', 'remote'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employmentType",
            "in": "query",
            "description": "Filter by employment type. One or multiple values comma-separated. Supported values: 'full-time', 'part-time', 'contract', 'temporary', 'internship'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salary",
            "in": "query",
            "description": "Filter by salary range. Supported values: '40k+', '60k+', '80k+', '100k+', '120k+', '140k+', '160k+', '180k+', '200k+'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postedLimit",
            "in": "query",
            "description": "Filter posts by maximum posted date. Supported values: '24h', 'week', 'month'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job search response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elements": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/JobShort"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "companyId": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        },
                        "geoId": {
                          "type": "string"
                        },
                        "sortBy": {
                          "type": "string"
                        },
                        "workplaceType": {
                          "type": "string"
                        },
                        "postedLimit": {
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/linkedin/geo-id-search": {
      "get": {
        "summary": "Search LinkedIn Geo ID",
        "description": "Search LinkedIn Geo ID by location text",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Location text to search for Geo ID (required)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Geo ID search response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "search": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "elements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "geoId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/linkedin/post-search": {
      "get": {
        "summary": "Search LinkedIn posts",
        "description": "Search LinkedIn posts by keywords, author, date range, and more.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Keywords to search for in posts",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "Filter posts by author's profile URL (comma-separated)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profileId",
            "in": "query",
            "description": "Filter posts by author's profile ID or IDs (comma-separated). It's faster to search by ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company",
            "in": "query",
            "description": "Filter posts by this company URL or URLs (comma-separated)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Filter posts by company ID or IDs (comma-separated). It's faster to search by ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorsCompany",
            "in": "query",
            "description": "List of LinkedIn companies where authors of posts work (comma-separated)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorsCompanyId",
            "in": "query",
            "description": "List of LinkedIn company IDs where authors of posts work (comma-separated)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postedLimit",
            "in": "query",
            "description": "Filter posts by maximum posted date. Supported values: '24h', 'week', 'month'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort by field. Supported values: 'relevance', 'date'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post search response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elements": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostShort"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "search": {
                          "type": "string"
                        },
                        "profileId": {
                          "type": "string"
                        },
                        "companyId": {
                          "type": "string"
                        },
                        "postedLimit": {
                          "type": "string"
                        },
                        "sortBy": {
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },

    "/linkedin/post-comments": {
      "get": {
        "summary": "Get comments of LinkedIn post",
        "description": "Get comments of LinkedIn post by post URL.",
        "parameters": [
          {
            "name": "post",
            "in": "query",
            "description": "URL of the LinkedIn post (required)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort comments by field. Supported values: 'relevance', 'date'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination. Each page contains 20 comments. Default is 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "paginationToken",
            "in": "query",
            "description": "Required only if sortBy is 'relevance' and page > 1. Use this token from first page response.",
            "schema": {
              "type": "string",
              "format": "nullable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post comments response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elements": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostComment"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/linkedin/post-reactions": {
      "get": {
        "summary": "Get reactions of LinkedIn post",
        "description": "Get reactions of LinkedIn post by post URL.",
        "parameters": [
          {
            "name": "post",
            "in": "query",
            "description": "URL of the LinkedIn post (required)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination. Each page contains 20 reactions. Default is 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post reactions response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elements": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostReaction"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "$ref": "#/components/schemas/Pagination"
                    },
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pagination": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "previousElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paginationToken": {
            "type": "string",
            "format": "nullable"
          }
        }
      },
      "Profile": {
        "required": ["publicIdentifier"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "publicIdentifier": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "headline": {
            "type": "string"
          },
          "about": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "registeredAt": {
            "type": "string",
            "format": "date-time"
          },
          "topSkills": {
            "type": "string"
          },
          "connectionsCount": {
            "type": "integer",
            "format": "int32"
          },
          "followerCount": {
            "type": "integer",
            "format": "int32"
          },
          "openToWork": {
            "type": "boolean"
          },
          "hiring": {
            "type": "boolean"
          },
          "location": {
            "type": "object",
            "properties": {
              "linkedinText": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "parsed": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "regionCode": {
                    "type": "string",
                    "format": "nullable"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryFull": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  }
                }
              }
            }
          },

          "currentPosition": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "companyName": {
                  "type": "string"
                }
              }
            }
          },
          "experience": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "companyName": {
                  "type": "string"
                },
                "duration": {
                  "type": "string"
                },
                "position": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "companyLink": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startDate": {
                  "type": "object",
                  "properties": {
                    "month": {
                      "type": "string",
                      "format": "nullable"
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "text": {
                      "type": "string"
                    }
                  }
                },
                "endDate": {
                  "type": "object",
                  "properties": {
                    "month": {
                      "type": "string",
                      "format": "nullable"
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "text": {
                      "type": "string"
                    }
                  }
                },
                "employmentType": {
                  "type": "string"
                }
              }
            }
          },
          "education": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "degree": {
                  "type": "string"
                },
                "startDate": {
                  "type": "object",
                  "properties": {
                    "month": {
                      "type": "string",
                      "format": "nullable"
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "text": {
                      "type": "string"
                    }
                  }
                },
                "endDate": {
                  "type": "object",
                  "properties": {
                    "month": {
                      "type": "string",
                      "format": "nullable"
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "text": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "certifications": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "issuedAt": {
                  "type": "string"
                },
                "issuedBy": {
                  "type": "string"
                },
                "issuedByLink": {
                  "type": "string"
                }
              }
            }
          },
          "receivedRecommendations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "givenBy": {
                  "type": "string"
                },
                "givenAt": {
                  "type": "string"
                },
                "givenByLink": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "language": {
                  "type": "string"
                },
                "proficiency": {
                  "type": "string"
                }
              }
            }
          },
          "projects": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startDate": {
                  "type": "object",
                  "properties": {
                    "month": {
                      "type": "string",
                      "format": "nullable"
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "text": {
                      "type": "string"
                    }
                  }
                },
                "endDate": {
                  "type": "object",
                  "properties": {
                    "month": {
                      "type": "string",
                      "format": "nullable"
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "text": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "publications": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "publishedAt": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                }
              }
            }
          },
          "featured": {
            "type": "object",
            "properties": {
              "images": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "url"
                }
              },
              "link": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              }
            }
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "ProfileShort": {
        "required": ["publicIdentifier"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "publicIdentifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "linkedinText": {
                "type": "string"
              }
            }
          },
          "linkedinUrl": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          }
        }
      },
      "Company": {
        "required": ["universalName"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "universalName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tagline": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "foundedOn": {
            "type": "object",
            "properties": {
              "month": {
                "type": "string",
                "format": "nullable"
              },
              "year": {
                "type": "integer",
                "format": "int32"
              },
              "day": {
                "type": "string",
                "format": "nullable"
              }
            }
          },
          "employeeCount": {
            "type": "integer",
            "format": "int32"
          },
          "employeeCountRange": {
            "type": "object",
            "properties": {
              "start": {
                "type": "integer",
                "format": "int32"
              },
              "end": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "followerCount": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "headquarter": {
            "type": "object",
            "properties": {
              "geographicArea": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "line2": {
                "type": "string",
                "format": "nullable"
              },
              "line1": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "parsed": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "regionCode": {
                    "type": "string",
                    "format": "nullable"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryFull": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "localizedName": {
                  "type": "string"
                },
                "headquarter": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string",
                  "format": "nullable"
                },
                "country": {
                  "type": "string"
                },
                "geographicArea": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string",
                  "format": "nullable"
                },
                "line2": {
                  "type": "string",
                  "format": "nullable"
                },
                "line1": {
                  "type": "string"
                }
              }
            }
          },
          "specialities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "industries": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "width": {
                  "type": "integer",
                  "format": "int32"
                },
                "height": {
                  "type": "integer",
                  "format": "int32"
                },
                "expiresAt": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "backgroundCovers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "width": {
                  "type": "integer",
                  "format": "int32"
                },
                "height": {
                  "type": "integer",
                  "format": "int32"
                },
                "expiresAt": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "active": {
            "type": "boolean"
          },
          "jobSearchUrl": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "format": "nullable"
          },
          "crunchbaseFundingData": {
            "type": "object",
            "properties": {
              "numberOfFundingRounds": {
                "type": "integer",
                "format": "int32"
              },
              "lastFundingRound": {
                "type": "object",
                "properties": {
                  "localizedFundingType": {
                    "type": "string"
                  },
                  "leadInvestors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "moneyRaised": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  },
                  "fundingRoundUrl": {
                    "type": "string"
                  },
                  "announcedOn": {
                    "type": "object",
                    "properties": {
                      "month": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "year": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "day": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "numberOfOtherInvestors": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "investorsUrl": {
                    "type": "string"
                  }
                }
              },
              "organizationUrl": {
                "type": "string"
              },
              "updatedAt": {
                "type": "integer",
                "format": "int32"
              },
              "fundingRoundsUrl": {
                "type": "string"
              }
            }
          },
          "pageVerified": {
            "type": "boolean"
          }
        }
      },
      "CompanyShort": {
        "required": ["universalName"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "industries": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "linkedinText": {
                "type": "string"
              }
            }
          },
          "followers": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "universalName": {
            "type": "string"
          }
        }
      },
      "Job": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "jobState": {
            "type": "string"
          },
          "postedDate": {
            "type": "string",
            "format": "date-time"
          },
          "descriptionText": {
            "type": "string"
          },
          "descriptionHtml": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "linkedinText": {
                "type": "string"
              },
              "postalAddress": {
                "type": "string",
                "format": "nullable"
              },
              "parsed": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "regionCode": {
                    "type": "string",
                    "format": "nullable"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryFull": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "employmentType": {
            "type": "string"
          },
          "workplaceType": {
            "type": "string"
          },
          "workRemoteAllowed": {
            "type": "boolean"
          },
          "easyApplyUrl": {
            "type": "string"
          },
          "applicants": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string"
          },
          "companyLogo": {
            "type": "string"
          },
          "companyLink": {
            "type": "string"
          },
          "companyUniversalName": {
            "type": "string"
          },
          "salary": {
            "type": "object",
            "properties": {
              "min": {
                "type": "string"
              },
              "max": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "text": {
                "type": "string"
              }
            }
          },
          "views": {
            "type": "integer",
            "format": "int32"
          },
          "expireAt": {
            "type": "string",
            "format": "date-time"
          },
          "new": {
            "type": "boolean"
          },
          "jobApplicationLimitReached": {
            "type": "boolean"
          },
          "applicantTrackingSystem": {
            "type": "string"
          }
        }
      },
      "JobShort": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "postedDate": {
            "type": "string",
            "format": "date-time"
          },
          "companyName": {
            "type": "string"
          },
          "companyLink": {
            "type": "string"
          },
          "companyUniversalName": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "linkedinText": {
                "type": "string"
              }
            }
          },
          "easyApply": {
            "type": "boolean"
          }
        }
      },
      "PostShort": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "author": {
            "type": "object",
            "properties": {
              "publicIdentifier": {
                "type": "string"
              },
              "universalName": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "linkedinUrl": {
                "type": "string"
              },
              "type": {
                "type": "boolean"
              },
              "info": {
                "type": "boolean"
              },
              "website": {
                "type": "boolean"
              },
              "websiteLabel": {
                "type": "boolean"
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "width": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "height": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "expiresAt": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "postedAgo": {
            "type": "string"
          },
          "postImages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "width": {
                  "type": "integer",
                  "format": "int32"
                },
                "height": {
                  "type": "integer",
                  "format": "int32"
                },
                "expiresAt": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "article": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "linkLabel": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "width": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "height": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "expiresAt": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "repostId": {
            "type": "string",
            "format": "nullable"
          },
          "repost": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/PostShort"
              }
            ]
          },
          "repostedBy": {
            "type": "object",
            "properties": {
              "publicIdentifier": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "linkedinUrl": {
                "type": "string"
              }
            }
          },
          "newsletterUrl": {
            "type": "string"
          },
          "newsletterTitle": {
            "type": "string"
          },
          "socialContent": {
            "type": "object",
            "properties": {
              "hideCommentsCount": {
                "type": "boolean"
              },
              "hideReactionsCount": {
                "type": "boolean"
              },
              "hideSocialActivityCounts": {
                "type": "boolean"
              },
              "hideShareAction": {
                "type": "boolean"
              },
              "hideSendAction": {
                "type": "boolean"
              },
              "hideRepostsCount": {
                "type": "boolean"
              },
              "hideViewsCount": {
                "type": "boolean"
              },
              "hideReactAction": {
                "type": "boolean"
              },
              "hideCommentAction": {
                "type": "boolean"
              },
              "shareUrl": {
                "type": "string"
              },
              "showContributionExperience": {
                "type": "boolean"
              },
              "showSocialDetail": {
                "type": "boolean"
              }
            }
          },
          "engagement": {
            "type": "object",
            "properties": {
              "likes": {
                "type": "integer",
                "format": "int32"
              },
              "comments": {
                "type": "integer",
                "format": "int32"
              },
              "shares": {
                "type": "integer",
                "format": "int32"
              },
              "reactions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PostReaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the reaction.",
            "example": "urn:li:fsd_reaction:(urn:li:fsd_profile:ACoAAFsSba4BjCtAJXsUcfwXs0LPljAa2PsGpc8,urn:li:activity:7330681775884533760,0)"
          },
          "reactionType": {
            "type": "string",
            "description": "The type of reaction.",
            "example": "LIKE"
          },
          "postId": {
            "type": "string",
            "description": "The ID of the post that was reacted to.",
            "example": "7330681775884533760"
          },
          "actor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique identifier for the actor.",
                "example": "ACoAAFsSba4BjCtAJXsUcfwXs0LPljAa2PsGpc8"
              },
              "name": {
                "type": "string",
                "description": "The name of the actor.",
                "example": "Om More"
              },
              "linkedinUrl": {
                "type": "string",
                "format": "url",
                "description": "The LinkedIn profile URL of the actor.",
                "example": "https://www.linkedin.com/in/ACoAAFsSba4BjCtAJXsUcfwXs0LPljAa2PsGpc8"
              },
              "position": {
                "type": "string",
                "description": "The current position of the actor.",
                "example": "Student at Yashwantrao Mohite College of Arts, Science and Commerce, Pune"
              },
              "pictureUrl": {
                "type": "string",
                "format": "url",
                "description": "The URL of the actor's profile picture.",
                "example": "https://media.licdn.com/dms/image/v2/D4E03AQEjFjWHGRTC2Q/profile-displayphoto-shrink_800_800/B4EZcG0eZVHAAc-/0/1748166110665?e=1753920000&v=beta&t=HOMnbBij0Z_MV2RvUu5zLKCpOaN8Cbnh72uqaH99ZLA"
              },
              "picture": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "url",
                    "description": "The URL of the picture.",
                    "example": "https://media.licdn.com/dms/image/v2/D4E03AQEjFjWHGRTC2Q/profile-displayphoto-shrink_800_800/B4EZcG0eZVHAAc-/0/1748166110665?e=1753920000&v=beta&t=HOMnbBij0Z_MV2RvUu5zLKCpOaN8Cbnh72uqaH99ZLA"
                  },
                  "width": {
                    "type": "integer",
                    "description": "The width of the picture in pixels.",
                    "example": 800
                  },
                  "height": {
                    "type": "integer",
                    "description": "The height of the picture in pixels.",
                    "example": 800
                  },
                  "expiresAt": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The expiration timestamp of the picture URL in milliseconds since epoch.",
                    "example": 1753920000000
                  }
                },
                "required": ["url", "width", "height", "expiresAt"]
              }
            },
            "required": ["id", "name", "linkedinUrl"]
          }
        },
        "required": ["id", "reactionType", "postId", "actor"]
      },
      "PostComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the comment.",
            "example": "7330012053861998592"
          },
          "linkedinUrl": {
            "type": "string",
            "format": "url",
            "description": "The direct URL to the comment on LinkedIn.",
            "example": "https://www.linkedin.com/feed/update/urn:li:ugcPost:7329991434395160578?commentUrn=urn%3Ali%3Acomment%3A%28ugcPost%3A7329991434395160578%2C7330012053861998592%29&dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287330012053861998592%2Curn%3Ali%3AugcPost%3A7329991434395160578%29"
          },
          "commentary": {
            "type": "string",
            "description": "The text content of the comment.",
            "example": "Exciting 🔥"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO 8601 timestamp of when the comment was created.",
            "example": "2025-05-18T23:30:58.680Z"
          },
          "numComments": {
            "type": "integer",
            "description": "The number of replies to this comment.",
            "example": 0
          },
          "numShares": {
            "type": "integer",
            "nullable": true,
            "description": "The number of times this comment has been shared (often null for comments).",
            "example": null
          },
          "numImpressions": {
            "type": "integer",
            "nullable": true,
            "description": "The number of impressions for this comment (often null).",
            "example": null
          },
          "reactionTypeCounts": {
            "type": "array",
            "description": "A list of reaction types and their counts for this comment.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of reaction.",
                  "enum": ["LIKE", "EMPATHY", "PRAISE", "INTEREST", "MAYBE"],
                  "example": "LIKE"
                },
                "count": {
                  "type": "integer",
                  "description": "The number of this type of reaction.",
                  "example": 1
                }
              },
              "required": ["type", "count"]
            }
          },
          "postId": {
            "type": "string",
            "description": "The ID of the post to which this comment belongs.",
            "example": "7329991434395160578"
          },
          "actor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique identifier for the actor who made the comment.",
                "example": "ACoAABLGFg4BRMcDx84MmyU8X-Jqcw9wKCA1QxU"
              },
              "name": {
                "type": "string",
                "description": "The name of the actor.",
                "example": "Harshavardhan G H"
              },
              "linkedinUrl": {
                "type": "string",
                "format": "url",
                "description": "The LinkedIn profile URL of the actor.",
                "example": "https://www.linkedin.com/in/harshavardhangh"
              },
              "position": {
                "type": "string",
                "description": "The current position or headline of the actor.",
                "example": "Business Analyst | Data-Driven Decision Maker | 5+ Years of Experience in Municipal Data Systems & Public Sector Projects | Passionate About Driving Innovation in Local Governance | Always Exploring New Technologies"
              },
              "pictureUrl": {
                "type": "string",
                "format": "url",
                "description": "The URL of the actor's profile picture.",
                "example": "https://media.licdn.com/dms/image/v2/D5603AQF38AglH7bh-A/profile-displayphoto-shrink_800_800/profile-displayphoto-shrink_800_800/0/1730799919024?e=1753920000&v=beta&t=Jo-oVn--3ftKSEMtrITF0b3_UG97a0n401-ztV_9Gac"
              },
              "picture": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "url",
                    "description": "The URL of the picture.",
                    "example": "https://media.licdn.com/dms/image/v2/D5603AQF38AglH7bh-A/profile-displayphoto-shrink_800_800/profile-displayphoto-shrink_800_800/0/1730799919024?e=1753920000&v=beta&t=Jo-oVn--3ftKSEMtrITF0b3_UG97a0n401-ztV_9Gac"
                  },
                  "width": {
                    "type": "integer",
                    "description": "The width of the picture in pixels.",
                    "example": 800
                  },
                  "height": {
                    "type": "integer",
                    "description": "The height of the picture in pixels.",
                    "example": 800
                  },
                  "expiresAt": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The expiration timestamp of the picture URL in milliseconds since epoch.",
                    "example": 1753920000000
                  }
                },
                "required": ["url", "width", "height", "expiresAt"]
              },
              "author": {
                "type": "boolean",
                "description": "Indicates if the actor is the original author of the parent post.",
                "example": false
              }
            },
            "required": ["id", "name", "linkedinUrl", "author"]
          },
          "createdAtTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp of when the comment was created, in milliseconds since epoch.",
            "example": 1747611058680
          },
          "pinned": {
            "type": "boolean",
            "description": "Indicates if the comment is pinned.",
            "example": false
          },
          "contributed": {
            "type": "boolean",
            "description": "Indicates if the actor is a contributor to the content (e.g., a group admin or page role).",
            "example": false
          },
          "edited": {
            "type": "boolean",
            "description": "Indicates if the comment has been edited.",
            "example": false
          }
        },
        "required": [
          "id",
          "linkedinUrl",
          "commentary",
          "createdAt",
          "numComments",
          "postId",
          "actor",
          "createdAtTimestamp",
          "pinned",
          "contributed",
          "edited"
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuthHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}
